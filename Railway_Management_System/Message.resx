<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Mv+0mTL/tJky/7SZMv+0mTL/tJky/7SZMv+0mTL/tJky/7SZMv+0mTL/tJky/7SZMv+0mTL/tJgxgQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2mDEqtJky/LSZMv+0mTL/tJky/7SZ
        Mv+0mTL/tJky/7SZMv+0mTL/tJky/7SZMv+0mTL/tJky/7SZMv+0mTL/tJky/7SZMv+0mTL/tJky/7SZ
        Mvu0mzIpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0mTGCtJky/7SZ
        Mv+0mTL/tJky/7SZMv+0mTL/tJky/7SZMv+0mTL/tJky/7SZMv+0mTL/tJky/7SZMv+0mTL/tJky/7SZ
        Mv+0mTL/s5kygAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        AAG1mTJxtJky8bSZMv+0mTL/tJky/7SZMv+0mTL/tJky/7SZMv+0mTL/tJky/7SZMv+0mTL/tJky/7SZ
        Mv+0mTL/tJky8bSZMnD//wABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACqjjkJtJsyPbSZM1W0mTL3tJky/7SZMv+0mTL/tJky/7SZMv+0mTL/tJky/7SZ
        Mv+0mTL1s5gxVLSbMj2qjjkJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALOYMmG0mTL2tJky/7SZMv+0mTL/tJky/7SZ
        Mv+0mTL/tJky9bOYMV4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALaeMRWzmTNGtJkzVbSZ
        M1W0mTNVtJkzVbOZM0azmTMUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////////////////5//n/+P/x//gAAf/4AAH/8AAA/+AAAH/hw
        Dh/4cA4f+AAAH/gAAB/4AAAf+AAAH/n//5/5//+f+f//n/n//5/5//+f+P//H/gAAB/4AAAf+AAAH/wA
        AD/8AAA//wAA///gB///8A//////////////////
</value>
  </data>
</root>